sudo: false

language: java

# Makes build faster to cache maven things.
cache:
  directories:
  - .autoconf
  - $HOME/.m2

services:
  - docker

# whitelist
branches:
 only:
  - master

jdk:
 - oraclejdk8
 
# Handle git submodules manually
git:
    submodules: false

before_install:
 - chmod +x ./org.eclipse.scanning.releng/build/commit-msg.sh
 - bash ./org.eclipse.scanning.releng/build/commit-msg.sh
 - git clone --depth=50 --branch=master https://github.com/eclipse/richbeans.git ../../eclipse/org.eclipse.richbeans
 - git clone --depth=50 --branch=master https://github.com/eclipse/dawnsci.git ../../eclipse/org.eclipse.dawnsci
 - git clone --depth=50 --branch=master https://github.com/DawnScience/jeromq.git ../../jeromq
 - git clone --depth=50 --branch=master https://github.com/DawnScience/dawn-hdf.git ../../dawn-hdf
 # Replace the SSH URL with the public URL, then initialize submodules
 - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
 - git submodule update --init --recursive
  
# Run the build from org.eclipse.scanning
install:
  - cd ../../eclipse
  - mv ../DiamondLightSource/daq-eclipse org.eclipse.scanning
  - cd org.eclipse.scanning
 
# Set LD_LIBRARY_PATH for the tests. Also set a variable that attempts to clear /tmp on the travis node to avoid it getting large
env:
  - CLEAR_TMP=true LD_LIBRARY_PATH=/home/travis/build/dawn-hdf/hdf.hdf5lib/lib/linux-x86_64
 
# compile and test
script: 
 - mvn clean install surefire:test -Dtest.includes=org/eclipse/scanning/**/Suite.java
